{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/App.jsx","index.js"],"names":["MyForm","styled","form","initialState","name","number","ContactsForm","state","change","e","currentTarget","value","setState","submit","preventDefault","props","onHandleSubmit","reset","this","onSubmit","onChange","type","placeholder","pattern","title","required","Component","MyLabel","label","Filter","filtered","MyList","ul","ContactsList","contacts","deleteContact","map","id","className","onClick","style","padding","App","filter","onHandleSubmitContact","addContact","uuidv4","find","contact","toLowerCase","alert","onDeleteContact","prev","item","changeFilterInput","target","onFilteredContacts","trim","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f4bc259.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nexport const MyForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 350px;\r\n  height: 240px;\r\n  border: 2px solid darkgrey;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  background-color: snow;\r\n\r\n label{\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 1.18;\r\n}\r\ninput{\r\n  width: 250px;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n  button{\r\n  font-size: 16px;\r\n  width: 150px;\r\n  padding: 4px;\r\n  border: 2px solid darkgrey;\r\n  border-radius: 4px;\r\n  background-color: darkgrey;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n}\r\n`\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { MyForm } from './ContactsForm.styled'\r\nconst initialState = {\r\n    name: '',\r\n    number:''\r\n}\r\nexport default class ContactsForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number:''\r\n    }\r\n    change = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({[name]:value})\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onHandleSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({...initialState})\r\n    }\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <MyForm onSubmit={this.submit}>\r\n                <label>\r\n                    Name\r\n                <input\r\n                    onChange={this.change}\r\n  type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder='Enter your name'\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n/>\r\n                </label>\r\n                Number\r\n                <label>\r\n                <input\r\n                    onChange={this.change}\r\n                    placeholder='Enter your phone number'\r\n\r\n  type=\"tel\"\r\n                    name=\"number\"\r\n                                        value={number}\r\n\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required\r\n                />\r\n                </label>\r\n                <button type='submit'>Add contact</button>\r\n            </MyForm>\r\n        )\r\n    }\r\n}\r\n\r\nContactsForm.propTypes = {\r\n    onHandleSubmit:PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","import styled from '@emotion/styled';\r\nexport const MyLabel = styled.label`\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1.14;\r\n  margin-top: 20px;\r\n\r\n    input{\r\n  width: 250px;\r\n  border: 1px solid grey;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n}\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { MyLabel } from './Filter.styled'\r\nconst Filter = ({filtered, value}) => {\r\n    return (\r\n        <MyLabel>\r\n            Find contacts by name\r\n            <input type='text' name='filter' value={value} onChange={filtered}/>\r\n        </MyLabel>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filtered:PropTypes.func.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Filter\r\n\r\n","import styled from '@emotion/styled';\r\nexport const MyList = styled.ul`\r\npadding: 0;\r\n    .contact {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 1.18;\r\n  margin-bottom: 5px;\r\n}\r\n.buttonDelete {\r\n  margin-left: 10px;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n  background-color: darkgrey;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n.icon {\r\n  width: 25px;\r\n  height: 20px;\r\n  fill: rgb(80, 8, 80);\r\n  margin-right: 10px;\r\n}\r\n`","import React from 'react'\r\nimport { FcContacts } from 'react-icons/fc'\r\nimport PropTypes from 'prop-types'\r\nimport { MyList } from './ContactsList.styled';\r\nconst ContactsList = ({contacts, deleteContact}) => {\r\n    return (\r\n        <MyList>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li className='contact' key={id}>\r\n                    <FcContacts className='icon' />\r\n                     <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className='buttonDelete'\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n                </li>\r\n            ))}\r\n        </MyList>\r\n    );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number:PropTypes.string,\r\n      id:PropTypes.string,\r\n      })\r\n    ),\r\n    deleteContact:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactsList;","import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport ContactsForm from './ContactsForm/ContactsForm'\r\nimport Filter from './Filter/Filter'\r\nimport ContactsList from './ContactsList/ContactsList'\r\nconst style = {\r\n      padding:20\r\n    };\r\n\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [{name:'Dima',number:'+380994457869',id:'21'},{name:'Alex',number:'+380994457861',id:'22'},{name:'Vova',number:'+380994457666',id:'23'},{name:'Valya',number:'+380669957869',id:'24'}],\r\n        filter:''\r\n    }\r\n\r\n    onHandleSubmitContact = ({name,number}) => {\r\n        const addContact = ({\r\n            id: uuidv4(),\r\n            name,\r\n            number\r\n        })\r\n\r\n        this.state.contacts.find(contact => contact.name.toLowerCase() === addContact.name.toLowerCase()) ? alert(`${name} is already in contacts`) : this.setState(({ contacts }) => ({\r\n            contacts: [addContact, ...contacts]\r\n        }))\r\n\r\n    }\r\n\r\n    onDeleteContact = (id) => {\r\n        this.setState((prev) => ({\r\n            contacts: prev.contacts.filter(item => item.id !== id)\r\n        }))\r\n    }\r\n\r\n      changeFilterInput = e => {\r\n    this.setState({ filter: e.target.value });\r\n    };\r\n    \r\n  onFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim()),\r\n    );\r\n  };\r\n\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts')\r\n        const parsedContacts = JSON.parse(contacts)\r\n        if (parsedContacts) {\r\n            this.setState({contacts:parsedContacts})\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {filter } = this.state;\r\n        return (\r\n            <div style={style}>\r\n  <h1>Phonebook</h1>\r\n                <ContactsForm onHandleSubmit={this.onHandleSubmitContact}/>\r\n\r\n  <h2>Contacts</h2>\r\n                <Filter value={filter} filtered={this.changeFilterInput}/>\r\n                <ContactsList deleteContact={this.onDeleteContact} contacts={this.onFilteredContacts()}/>\r\n</div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App.jsx';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}